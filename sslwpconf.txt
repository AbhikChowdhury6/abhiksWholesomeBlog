# HTTP: serve ACME challenges and redirect everything else to HTTPS
server {
  listen 80;
  server_name abhikchowdhury.com www.abhikchowdhury.com;

  # ACME (must be reachable on port 80 for renewals)
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

# HTTPS: terminate TLS and proxy to WordPress
server {
  listen 443 ssl http2;
  server_name abhikchowdhury.com www.abhikchowdhury.com;

  ssl_certificate     /etc/letsencrypt/live/abhikchowdhury.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/abhikchowdhury.com/privkey.pem;

  # (Optional) Basic TLS hardening â€” safe defaults
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;

  # Serve ACME path here too (harmless, helps if someone hits https://)
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Allow larger media/uploads in WP
  client_max_body_size 64m;

  location / {
    proxy_pass http://wordpress:80;  # service name in your compose network
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
